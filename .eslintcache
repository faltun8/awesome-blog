[{"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/reportWebVitals.js":"1","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/index.js":"2","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/App.js":"3","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/SignUp.js":"4","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/router/Router.js":"5","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Footer.js":"6","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Navbar.js":"7","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/SignIn.js":"8","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/ForgetPassword.js":"9","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/HomePage.js":"10","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Copyright.js":"11","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/helper/FetchData.js":"12","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/context/AuthContext.js":"13","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/MediaCard.js":"14","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/helper/FormatDate.js":"15","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/DetailPage.js":"16","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Comments.js":"17","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/PostCreate.js":"18","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/Profile.js":"19"},{"size":362,"mtime":1612162238000,"results":"20","hashOfConfig":"21"},{"size":500,"mtime":1612162238000,"results":"22","hashOfConfig":"21"},{"size":236,"mtime":1612162238000,"results":"23","hashOfConfig":"24"},{"size":6439,"mtime":1612162238000,"results":"25","hashOfConfig":"24"},{"size":1043,"mtime":1612162238000,"results":"26","hashOfConfig":"21"},{"size":792,"mtime":1612162238000,"results":"27","hashOfConfig":"24"},{"size":5685,"mtime":1612162238000,"results":"28","hashOfConfig":"21"},{"size":5266,"mtime":1612162238000,"results":"29","hashOfConfig":"24"},{"size":3579,"mtime":1612162238000,"results":"30","hashOfConfig":"24"},{"size":2196,"mtime":1612162238000,"results":"31","hashOfConfig":"21"},{"size":445,"mtime":1612162238000,"results":"32","hashOfConfig":"21"},{"size":340,"mtime":1611891688772,"results":"33","hashOfConfig":"21"},{"size":1310,"mtime":1612162238000,"results":"34","hashOfConfig":"21"},{"size":5222,"mtime":1612162238000,"results":"35","hashOfConfig":"24"},{"size":161,"mtime":1612162238000,"results":"36","hashOfConfig":"21"},{"size":7093,"mtime":1612162238000,"results":"37","hashOfConfig":"24"},{"size":621,"mtime":1612162238000,"results":"38","hashOfConfig":"21"},{"size":4843,"mtime":1612162238000,"results":"39","hashOfConfig":"21"},{"size":2744,"mtime":1612162238000,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1aul83h",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"16wruzl",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/reportWebVitals.js",[],["87","88"],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/index.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/App.js",[],["89","90"],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/SignUp.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/router/Router.js",["91"],"import SignIn from \"../pages/SignIn\";\nimport SignUp from \"../pages/SignUp\";\nimport DetailPage from \"../pages/DetailPage\";\nimport HomePage from \"../pages/HomePage\";\nimport ForgetPassword from \"../pages/ForgetPassword\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport Profile from \"../pages/Profile\";\nimport PostCreate from \"../pages/PostCreate\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/register\" component={SignUp} />\n        <Route exact path=\"/login\" component={SignIn} />\n        <Route exact path=\"/forget-password\" component={ForgetPassword} />\n        <Route exact path=\"/detail-page\" component={DetailPage} />\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/post-create\" component={PostCreate} />\n        <Route path=\"/\" component={HomePage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Footer.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Navbar.js",["92","93","94","95"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    boxShadow: \"1px 10px 50px 1px rgba(0,0,0,0.5)\",\n    \"&:hover\": {\n      transform: \"scale(1.02)\",\n      boxShadow: \"10px 10px 50px 1px rgba(0,0,0,0.9)\",\n      backgroundColor: \"white\",\n      color: \"#FF0102\",\n    },\n  },\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    color: \"white\",\n\n    borderRadius: 5,\n\n    \"&:hover\": {\n      transform: \"scale(1.02)\",\n      boxShadow: \"10px 10px 50px 1px rgba(0,0,0,0.7)\",\n      backgroundColor: \"white\",\n      color: \"#FF0102\",\n    },\n  },\n  displayName: {\n    margin: 10,\n    fontSize: 17,\n  },\n}));\n\nexport default function Navbar() {\n  const history = useHistory();\n  const { currentUser } = useContext(AuthContext);\n  //console.log(\"currentUser\", currentUser?.data?.username);\n  const [auth, setAuth] = useState(false);\n  useEffect(() => {\n    //console.log(currentUser);\n    if (currentUser == null) {\n      setAuth(false);\n    } else {\n      setAuth(true);\n    }\n  }, [currentUser]);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = async () => {\n    const token = localStorage.getItem(\"token\");\n    await axios\n      .post(\"https://blog-backend-django.herokuapp.com/dj-rest-auth/logout/\", {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then(() => {\n        setAuth(false);\n        window.localStorage.clear();\n        history.push(\"/login\");\n      })\n      .catch((err) => console.log(err));\n  };\n  const handleProfile = () => {\n    history.push(\"/profile\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            href=\"/\"\n          >\n            <EcoIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Awesome Blog\n          </Typography>\n          {!auth ? (\n            <div>\n              {/* <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu> */}\n\n              <Button className={classes.button} href=\"/login\">\n                Sign In\n              </Button>\n              <Button className={classes.button} href=\"/register\">\n                Sign Up\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <p className={classes.displayName}>\n                  {currentUser?.data?.username}\n                </p>\n\n                <AccountCircle className={classes.accountIcon} />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleProfile}>Profile</MenuItem>\n                {/* <MenuItem onClick={handleClose}>My account</MenuItem> */}\n                <MenuItem onClick={handleLogout}>Sign Out</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/SignIn.js",["96","97","98"],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/ForgetPassword.js",["99","100"],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/HomePage.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Copyright.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/helper/FetchData.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/context/AuthContext.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/MediaCard.js",["101"],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/helper/FormatDate.js",[],"/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/DetailPage.js",["102","103","104","105","106","107"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Image } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useFormik } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport * as Yup from \"yup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Card from \"@material-ui/core/Card\";\nimport Comments from \"../components/Comments\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Comment, Form, Header } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    maxWidth: 1000,\n    margin: \"auto\",\n    marginTop: 50,\n  },\n  cardMedia: {\n    paddingTop: \"40%\", // 16:9\n    width: \"100%\", // Fix IE 11 issue.\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  form: {\n    width: \"50%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    marginLeft: 10,\n    marginRight: 15,\n  },\n  submit: {\n    width: \"70%\",\n    margin: \"auto\",\n    marginTop: 20,\n  },\n  textField: {\n    margin: 5,\n  },\n  comments: {\n    margin: 5,\n  },\n  count: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n  },\n  notLiked: {\n    verticalAlign: \"middle\",\n    opacity: 0.3,\n  },\n  liked: {\n    color: \"red\",\n    verticalAlign: \"middle\",\n  },\n  icons: {\n    verticalAlign: \"middle\",\n  },\n  author: {\n    verticalAlign: \"middle\",\n  },\n}));\n\nexport default function DetailPage() {\n  const { state } = useLocation();\n  const [postDetail, setPostDetail] = useState([]);\n  const [isLiked, setIsLiked] = useState(true);\n  const mySlug = state.slug;\n  const classes = useStyles();\n  // console.log(state.slug);\n\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    //console.log(\"test\");\n    if (token) {\n      getPostDetails(mySlug);\n      userInfo(mySlug);\n    }\n  }, []);\n\n  async function getPostDetails(mySlug) {\n    await axios\n      .get(\n        `https://blog-backend-django.herokuapp.com/api/${mySlug}/`,\n        {\n          headers: { Authorization: `Token ${token}` },\n        },\n        {\n          key: \"value\",\n        }\n      )\n      .then((res) => setPostDetail(res.data))\n      .then(console.log(\"P\", postDetail));\n  }\n  // console.log(postDetail.comments);\n\n  async function postComment(comment, mySlug) {\n    //console.log(comment);\n    //console.log(mySlug);\n    await axios\n      .post(\n        `https://blog-backend-django.herokuapp.com/api/comment/${mySlug}/`,\n        { content: comment },\n        {\n          headers: { Authorization: `Token ${token}` },\n        }\n      )\n      //.then(console.log(\"veri gittiiiiiiiiiiii\"))\n      .then(getPostDetails(mySlug))\n      .catch((error) => console.log(error));\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      comment: \"\",\n    },\n    onSubmit: (values) => {\n      postComment(values.comment, mySlug);\n      values.comment = \"\";\n    },\n  });\n\n  async function handleLike(mySlug) {\n    await axios\n      .post(\n        `https://blog-backend-django.herokuapp.com/api/like/${mySlug}/`,\n        { data: \"\" },\n        {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        }\n      )\n      .then(getPostDetails(mySlug))\n      .then(userInfo(mySlug))\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  async function userInfo(mySlug) {\n    await axios\n      .get(`https://blog-backend-django.herokuapp.com/api/${mySlug}/`, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => setIsLiked(res.data.has_liked))\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        image={postDetail.image}\n        title=\"Image title\"\n      />\n\n      <form className={classes.form} onSubmit={formik.handleSubmit}>\n        <Header as=\"h3\">\n          <CardContent className={classes.count}>\n            <div className={classes.author}>\n              <AccountCircleIcon className={classes.icons} />\n              {postDetail.author}\n            </div>\n            <Typography>\n              <CardActionArea onClick={() => handleLike(mySlug)}>\n                <FavoriteIcon\n                  className={isLiked ? classes.liked : classes.notLiked}\n                />\n\n                <span className={classes.iconCount}>\n                  {postDetail.get_like_count}\n                </span>\n              </CardActionArea>\n            </Typography>\n            <Typography>\n              <VisibilityIcon className={classes.icons} />\n              <span className={classes.iconCount}>\n                {postDetail.get_view_count}\n              </span>\n            </Typography>\n            <Typography>\n              <ChatBubbleOutlineIcon className={classes.icons} />\n              <span className={classes.iconCount}>\n                {postDetail.get_comment_count}\n              </span>\n            </Typography>\n          </CardContent>\n        </Header>\n\n        <Header as=\"h3\" dividing>\n          Comments\n        </Header>\n\n        {postDetail?.comments?.map((comment) => (\n          <Comment.Group item sm={4} xs={12} key={comment?.id.toString()}>\n            <Comments\n              myUser={comment?.user}\n              myDate={comment?.time_stamp}\n              myContent={comment?.content}\n            />\n          </Comment.Group>\n        ))}\n\n        <TextField\n          variant=\"standard\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"comment\"\n          label=\"Comment\"\n          name=\"comment\"\n          value={formik.values.comment}\n          onChange={formik.handleChange}\n          error={formik.errors.comment}\n          helperText={formik.errors.comment}\n          className={classes.textField}\n        />\n        <div className={classes.submit}>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n            Send Comment\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/components/Comments.js",["108","109","110"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Comment } from \"semantic-ui-react\";\nimport { formatDateFunc } from \"../helper/FormatDate\";\n\nexport default function Comments({ myUser, myDate, myContent }) {\n  return (\n    <Comment>\n      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n\n      <Comment.Content>\n        <Comment.Author as=\"a\">{myUser}</Comment.Author>\n        <Comment.Metadata>\n          <div>{formatDateFunc(myDate)}</div>\n        </Comment.Metadata>\n        <Comment.Text>{myContent}</Comment.Text>\n      </Comment.Content>\n    </Comment>\n  );\n}\n","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/PostCreate.js",["111"],"import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Copyright from \"../components/Copyright\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nconst postValidationSchema = Yup.object().shape({\n  title: Yup.string().max(\"30\").required(\"Title is required!!!\"),\n  content: Yup.string().required(\"Content is required\"),\n  image: Yup.string().required(\"Please enter website\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  paper: {\n    margin: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    width: \"25%\",\n    margin: \"auto\",\n    marginTop: 20,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function PostCreate() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [value, setValue] = useState(0);\n  const token = localStorage.getItem(\"token\");\n\n  async function create({ title, content, image, status }) {\n    await axios\n      .post(\n        \"https://blog-backend-django.herokuapp.com/api/create/\",\n        {\n          title: title,\n          content: content,\n          image: image,\n          status: value ? \"d\" : \"p\",\n        },\n        {\n          headers: { Authorization: `Token ${token}` },\n        }\n      )\n      .then((data) => {\n        console.log(\"new data\", data);\n      })\n      .then(() => history.push(\"/profile\"))\n      .catch((error) => console.log(error));\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      content: \"\",\n      image: \"\",\n    },\n    validationSchema: postValidationSchema,\n    onSubmit: (values) => {\n      create(values);\n    },\n  });\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item xs={12} sm={12} md={12} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LocalMallIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Create Post\n          </Typography>\n          <form className={classes.form} onSubmit={formik.handleSubmit}>\n            <TextField\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"title\"\n              label=\"Title \"\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.errors.title}\n              helperText={formik.errors.title}\n            />\n            <TextField\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"content\"\n              label=\"Content\"\n              id=\"content\"\n              value={formik.values.content}\n              onChange={formik.handleChange}\n              error={formik.errors.content}\n              helperText={formik.errors.content}\n            />\n            <TextField\n              variant=\"standard\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"image\"\n              label=\"Image URL\"\n              id=\"image\"\n              value={formik.values.image}\n              onChange={formik.handleChange}\n              error={formik.errors.image}\n              helperText={formik.errors.image}\n            />\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"Publish\" />\n              <Tab label=\"Draft\" />\n            </Tabs>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Share Post\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/faltun/Desktop/ReactProjects/awesome-blog/src/pages/Profile.js",["112","113"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Footer from \"../components/Footer\";\nimport axios from \"axios\";\nimport MediaCard from \"../components/MediaCard\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  fab: {\n    margin: theme.spacing(2),\n  },\n  absolute: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nexport default function Profile() {\n  const classes = useStyles();\n  const [profilePage, setProfilePage] = useState();\n  const token = localStorage.getItem(\"token\");\n\n  const fetchData = async () => {\n    const response = await axios.get(\n      \"https://blog-backend-django.herokuapp.com/api/postlist/\",\n      {\n        headers: { Authorization: `Token ${token}` },\n      }\n    );\n    return response;\n  };\n\n  useEffect(() => {\n    fetchData().then((res) => setProfilePage(res.data.results));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <main>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={3}>\n            {profilePage?.map((post) => (\n              <Grid item sm={4} xs={12} key={post.slug}>\n                <MediaCard\n                  postImg={post.image}\n                  title={post.title}\n                  content={post.content}\n                  publishDate={post.published_date}\n                  author={post.author}\n                  likeCount={post.get_like_count}\n                  viewCount={post.get_view_count}\n                  commentCount={post.get_comment_count}\n                  slug={post.slug}\n                  status={post.status}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n\n      <Tooltip title=\"Add\" aria-label=\"add\" href=\"/post-create\">\n        <Fab color=\"primary\" className={classes.absolute}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":24},{"ruleId":"120","severity":1,"message":"126","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":17},{"ruleId":"120","severity":1,"message":"127","line":71,"column":9,"nodeType":"122","messageId":"123","endLine":71,"endColumn":21},{"ruleId":"120","severity":1,"message":"128","line":60,"column":9,"nodeType":"122","messageId":"123","endLine":60,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":61,"column":10,"nodeType":"122","messageId":"123","endLine":61,"endColumn":18},{"ruleId":"120","severity":1,"message":"130","line":62,"column":10,"nodeType":"122","messageId":"123","endLine":62,"endColumn":21},{"ruleId":"120","severity":1,"message":"125","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":24},{"ruleId":"120","severity":1,"message":"131","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":12},{"ruleId":"120","severity":1,"message":"132","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"133","line":1,"column":38,"nodeType":"122","messageId":"123","endLine":1,"endColumn":44},{"ruleId":"120","severity":1,"message":"134","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":15},{"ruleId":"120","severity":1,"message":"135","line":8,"column":13,"nodeType":"122","messageId":"123","endLine":8,"endColumn":16},{"ruleId":"120","severity":1,"message":"136","line":16,"column":8,"nodeType":"122","messageId":"123","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"137","line":19,"column":19,"nodeType":"122","messageId":"123","endLine":19,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":111,"column":6,"nodeType":"140","endLine":111,"endColumn":8,"suggestions":"141"},{"ruleId":"120","severity":1,"message":"132","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"142","line":1,"column":28,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"133","line":1,"column":38,"nodeType":"122","messageId":"123","endLine":1,"endColumn":44},{"ruleId":"120","severity":1,"message":"132","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"143","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":18},{"ruleId":"138","severity":1,"message":"144","line":59,"column":6,"nodeType":"140","endLine":59,"endColumn":8,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],["146"],["147"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'handleChange' is assigned a value but never used.","'history' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Image' is defined but never used.","'Yup' is defined but never used.","'FaceIcon' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPostDetails', 'mySlug', 'token', and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["148"],"'useState' is defined but never used.","'IconButton' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [getPostDetails, mySlug, token, userInfo]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchData]",{"range":"156","text":"157"},[2900,2902],"[getPostDetails, mySlug, token, userInfo]",[1614,1616],"[fetchData]"]